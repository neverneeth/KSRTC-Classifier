# -*- coding: utf-8 -*-
"""KSRTC Model 2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y-W57C4qyAs3cOoqxBM-9righ2dHb-p0
"""

!pip install -Uqq fastai 'duckduckgo_search>=6.2'

from duckduckgo_search import DDGS
from fastcore.all import *
def search_images(keywords, max_images=200): return L(DDGS().images(keywords, max_results=max_images)).itemgot('image')
import time, json
from fastdownload import download_url
from fastai.vision.all import *
from fastai.vision.widgets import *

urls = search_images("Venad KSRTC", max_images=1)
download_url(urls[0], "venad.jpg")
im = Image.open("venad.jpg")
im.to_thumb(256,256)

download_url(search_images("City Circular KSRTC", max_images=2)[1], "circular.jpg")
im = Image.open("circular.jpg")
im.to_thumb(256,256)

from google.colab import drive
drive.mount('/content/drive')

path  = Path("drive/MyDrive/bus-type")

bus = DataBlock(blocks=(ImageBlock, CategoryBlock),
               get_items=get_image_files,
               splitter= RandomSplitter(valid_pct=0.2, seed=42),
                get_y = parent_label,
                item_tfms=RandomResizedCrop(128, min_scale=0.5)
               ).dataloaders(path, bs=10)

bus.show_batch()

learn = vision_learner(bus, resnet50, metrics=error_rate)
learn.fine_tune(7)

interp = ClassificationInterpretation.from_learner(learn)
interp.plot_confusion_matrix()

interp.plot_top_losses(5, nrows=5)

cleaner = ImageClassifierCleaner(learn)
cleaner

for idx in cleaner.delete(): cleaner.fns[idx].unlink()
for idx,cat in cleaner.change(): shutil.move(str(cleaner.fns[idx]), path/cat)

im = Image.open("ticket-TES674302.png")
im.to_thumb(256, 256)
bus_type, _, probs = learn.predict(PILImage.create(im))
higher = max(probs)
print(f"This is a: {bus_type}.")
print(f"Probability it's a {bus_type}: {higher:.4f}")
im.to_thumb(256, 256)

learn.export('ksrtc50.pkl')

